package com.iflytek.config;import org.springframework.cache.CacheManager;import org.springframework.cache.annotation.EnableCaching;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.data.redis.cache.RedisCacheManager;import org.springframework.data.redis.connection.RedisConnectionFactory;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.data.redis.serializer.StringRedisSerializer;import java.util.HashMap;import java.util.Map;/** * @author: demopoo * @Date: Created in 下午5:49 2018/4/16 * @Des: * @Modifyed By: */@Configuration@EnableCachingpublic class RedisConfig {    @Bean    public RedisTemplate<String,Object> getRedisTemplate(RedisConnectionFactory factory){        RedisTemplate<String,Object> redisTemplate = new RedisTemplate<String, Object>();        redisTemplate.setConnectionFactory(factory);        redisTemplate.setKeySerializer(new StringRedisSerializer());        redisTemplate.setValueSerializer(new RedisObjectSerialize());        return redisTemplate;    }    @Bean    public CacheManager getRedisCacheManager(RedisTemplate redisTemplate){        RedisCacheManager redisCacheManager = new RedisCacheManager(redisTemplate);        Map<String,Long> map = new HashMap<String, Long>();        map.put("1min",60L);        map.put("3min",180L);        redisCacheManager.setExpires(map);//        redisCacheManager.setDefaultExpiration(10000);//所有缓存默认10秒        return redisCacheManager;    }}