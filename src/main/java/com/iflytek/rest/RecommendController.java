package com.iflytek.rest;import com.fasterxml.jackson.dataformat.xml.XmlMapper;import com.iflytek.entity.MockResult;import com.iflytek.entity.req.RecommendCommenParams;import com.iflytek.entity.res.*;import com.iflytek.exception.exceptionhandle.SecurityVerificationException;import com.iflytek.util.ConfigUtils;import org.apache.catalina.LifecycleState;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletResponse;import javax.validation.ConstraintViolationException;import javax.xml.stream.XMLStreamConstants;import java.util.ArrayList;import java.util.List;/** * @author: demopoo * @Date: Created in 下午11:40 2018/4/16 * @Des:  推荐 * @Modifyed By: */@RestController@RequestMapping("/iflytek/api/suggestion")public class RecommendController {    private Logger logger = LoggerFactory.getLogger(RecommendController.class);    /**     * OTT 推荐接口     * @param params     * @param response     * @return     */    @RequestMapping(value = "/rec_ott",method = RequestMethod.POST,produces = { "text/xml;charset=GBK" },consumes = {"text/xml"})    public Object recOtt(@RequestBody RecommendCommenParams params, HttpServletResponse response) throws Exception{        ResponseInfo responseInfo = new ResponseInfo();        responseInfo.setResp_desc("success");        responseInfo.setResp_code(1000);        responseInfo.setResp_result(0);        ResponseContent responseContent = new ResponseContent();        List<ResponseItem> list = new ArrayList<>();        ResponseItem responseItem = new ResponseItem();        responseItem.setUid(111);        responseItem.setResult_id("11111~222222~33333");        list.add(responseItem);        ResponseItem responseItem1 = new ResponseItem();        responseItem1.setUid(222);        responseItem1.setResult_id("11111~222222~33333");        list.add(responseItem1);        responseContent.setResults(list);        RecommendCommenResult result = MockResult.getRecommendCommenResult(responseInfo,responseContent);        return result;    }    /**     * 播放结束推荐     * @param params     * @param response     * @return     */    @RequestMapping(value = "/rec_vod_end",method = RequestMethod.POST,produces = { "text/xml;charset=GBK" },consumes = {"text/xml"})    public Object recVodEnd(@RequestBody RecommendCommenParams params, HttpServletResponse response){        RecommendCommenResult result = new RecommendCommenResult();        result.setResult_id(1234567890);        result.setResponse_time(20180131102941L+"");        ResponseInfo responseInfo = new ResponseInfo();        responseInfo.setResp_desc("success");        responseInfo.setResp_code(1000);        responseInfo.setResp_result(0);        result.setResponse(responseInfo);        ResponseContent responseContent = new ResponseContent();        List<ResponseItem> list = new ArrayList<>();        ResponseItem responseItem = new ResponseItem();        responseItem.setUid(111);        responseItem.setResult_id("11111~222222~33333");        list.add(responseItem);        ResponseItem responseItem1 = new ResponseItem();        responseItem1.setUid(222);        responseItem1.setResult_id("11111~222222~33333");        list.add(responseItem1);        responseContent.setResults(list);        result.setContent(responseContent);        return result;    }    /**     * 详情推荐接口     * @param params     * @param response     * @return     */    @RequestMapping(value = "/rec_vod_relate",method = RequestMethod.POST,produces = { "text/xml;charset=GBK" },consumes = {"text/xml"})    public Object recVodRelate(@RequestBody RecommendCommenParams params, HttpServletResponse response){        RecommendCommenResult result = new RecommendCommenResult();        result.setResult_id(1234567890);        result.setResponse_time(20180131102941L+"");        ResponseInfo responseInfo = new ResponseInfo();        responseInfo.setResp_desc("success");        responseInfo.setResp_code(1000);        responseInfo.setResp_result(0);        result.setResponse(responseInfo);        ResponseContent responseContent = new ResponseContent();        List<ResponseItem> list = new ArrayList<>();        ResponseItem responseItem = new ResponseItem();        responseItem.setUid(111);        responseItem.setResult_id("11111~222222~33333");        list.add(responseItem);        ResponseItem responseItem1 = new ResponseItem();        responseItem1.setUid(222);        responseItem1.setResult_id("11111~222222~33333");        list.add(responseItem1);        responseContent.setResults(list);        result.setContent(responseContent);        return result;    }}